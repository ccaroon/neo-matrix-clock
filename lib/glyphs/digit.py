__TEMPLATE = [
    (0,0), (0,1), (0,2),
    (1,0),        (1,2),
    (2,0), (2,1), (2,2),
    (3,0),        (3,2),
    (4,0), (4,1), (4,2),
]

__DIGITS = {
    0: [
        1,1,1,
        1,  1,
        1,0,1,
        1,  1,
        1,1,1,
    ],
    1: [
        0,0,1,
        0,  1,
        0,0,1,
        0,  1,
        0,0,1,
    ],
    2: [
        1,1,1,
        0,  1,
        1,1,1,
        1,  0,
        1,1,1,
    ],
    3: [
        1,1,1,
        0,  1,
        1,1,1,
        0,  1,
        1,1,1,
    ],
    4: [
        1,0,1,
        1,  1,
        1,1,1,
        0,  1,
        0,0,1,
    ],
    5: [
        1,1,1,
        1,  0,
        1,1,1,
        0,  1,
        1,1,1,
    ],
    6: [
        1,0,0,
        1,  0,
        1,1,1,
        1,  1,
        1,1,1,
    ],
    7: [
        1,1,1,
        0,  1,
        0,0,1,
        0,  1,
        0,0,1,
    ],
    8: [
        1,1,1,
        1,  1,
        1,1,1,
        1,  1,
        1,1,1,
    ],
    9: [
        1,1,1,
        1,  1,
        1,1,1,
        0,  1,
        0,0,1,
    ]
}

def __get_digit(digit):
    digit_data = []
    pixels = __DIGITS.get(int(digit))

    for idx, loc in enumerate(__TEMPLATE):
        px_data = {
            "row": loc[0],
            "col": loc[1],
            "on": False
        }
        if pixels[idx] == 1:
            px_data["on"] = True

        digit_data.append(px_data)

    return digit_data
